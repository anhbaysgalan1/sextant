import {
  SextantAllEventsToEnvironment,
  SextantEnvironments,
  SextantServices,
  SextantEvent,
} from './sextant-types.generated';
import { RequestHandler } from 'express';

/**
 * An express request handler that can handle
 * all events from one environment to another
 */
export type SextantExpressSingleEnvironmentHandler<
  IFrom extends keyof SextantEnvironments,
  ITo extends keyof SextantEnvironments[IFrom]['to'] = any
> = RequestHandler<
  any,
  // @ts-ignore
  SextantAllEventsToEnvironment<ITo, IFrom>,
  // @ts-ignore
  SextantAllEventsToEnvironment<IFrom, ITo>
>;

/**
 * An express request handler that handles one service only
 */
export type SextantExpressHandler<
  IService extends keyof SextantServices,
  IFrom extends keyof SextantServices[IService]['environments'] = any,
  // @ts-ignore
  ITarget extends keyof SextantServices[IService]['environments'][IFrom]['from'] = any
> = RequestHandler<
  any,
  // @ts-ignore
  SextantEvent<IService, ITarget, IFrom>,
  SextantEvent<IService, IFrom, ITarget>
>;

/**
 * Build multiple express request handlers by passing in
 * implementation details per feature
 */
export const makeExpressHandlers = <
  IFrom extends keyof SextantEnvironments,
  ITo extends keyof SextantEnvironments[IFrom]['to'] = any
>(
  from: IFrom,
  to: ITo,
  params: {
    // @ts-ignore
    [K in keyof SextantServices]?: SextantExpressHandler<K, IFrom, ITo>;
  },
): { service: keyof SextantServices; handler: RequestHandler }[] => {
  return Object.entries(params).map(([service, handler]) => ({
    service: service as keyof SextantServices,
    handler,
  }));
};

export const makeSextantExpressSdk = <
  IFrom extends keyof SextantEnvironments,
  ITo extends keyof SextantEnvironments[IFrom]['to'] = any
>(
  from: IFrom,
  to: ITo,
  fetcher: <IService extends keyof SextantServices>(
    service: IService,
    // @ts-ignore
    event: SextantEvent<IService, IFrom, ITo>,
  ) => // @ts-ignore
  Promise<SextantEvent<IService, ITo, IFrom>>,
) => <IService extends keyof SextantServices>(
  service: IService,
  // @ts-ignore
  event: SextantEvent<IService, IFrom, ITo>,
  // @ts-ignore
): Promise<SextantEvent<IService, ITo, IFrom>> => {};
