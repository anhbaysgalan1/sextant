import {
  SextantAllEventsToEnvironment,
  SextantEnvironments,
  SextantFeatures,
  SextantEvent,
} from './sextant-types.generated';
import { RequestHandler } from 'express';

/**
 * An express request handler that can handle
 * all events from one environment to another
 */
export type SextantExpressSingleEnvironmentHandler<
  IFrom extends keyof SextantEnvironments,
  ITo extends keyof SextantEnvironments[IFrom]['to'] = any
> = RequestHandler<
  any,
  // @ts-ignore
  SextantAllEventsToEnvironment<ITo, IFrom>,
  // @ts-ignore
  SextantAllEventsToEnvironment<IFrom, ITo>
>;

/**
 * An express request handler that handles one feature only
 */
export type SextantExpressHandler<
  IFeature extends keyof SextantFeatures,
  IFrom extends keyof SextantFeatures[IFeature]['environments'] = any,
  // @ts-ignore
  ITarget extends keyof SextantFeatures[IFeature]['environments'][IFrom]['from'] = any
> = RequestHandler<
  any,
  // @ts-ignore
  SextantEvent<IFeature, ITarget, IFrom>,
  SextantEvent<IFeature, IFrom, ITarget>
>;

/**
 * Build multiple express request handlers by passing in
 * implementation details per feature
 */
export const makeExpressHandlers = <
  IFrom extends keyof SextantEnvironments,
  ITo extends keyof SextantEnvironments[IFrom]['to'] = any
>(
  from: IFrom,
  to: ITo,
  params: {
    // @ts-ignore
    [K in keyof SextantFeatures]?: SextantExpressHandler<K, IFrom, ITo>;
  },
): { feature: keyof SextantFeatures; handler: RequestHandler }[] => {
  return Object.entries(params).map(([feature, handler]) => ({
    feature: feature as keyof SextantFeatures,
    handler,
  }));
};

export const makeSextantExpressSdk = <
  IFrom extends keyof SextantEnvironments,
  ITo extends keyof SextantEnvironments[IFrom]['to'] = any
>(
  from: IFrom,
  to: ITo,
  fetcher: <IFeature extends keyof SextantFeatures>(
    feature: IFeature,
    // @ts-ignore
    event: SextantEvent<IFeature, IFrom, ITo>,
  ) => // @ts-ignore
  Promise<SextantEvent<IFeature, ITo, IFrom>>,
) => <IFeature extends keyof SextantFeatures>(
  feature: IFeature,
  // @ts-ignore
  event: SextantEvent<IFeature, IFrom, ITo>,
  // @ts-ignore
): Promise<SextantEvent<IFeature, ITo, IFrom>> => {};
